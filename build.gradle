/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 Piasy
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.releaseVersionCode
        versionName rootProject.ext.releaseVersionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    publishNonDefault true
}

dependencies {
    provided baseDependencies.androidSupportAppCompatV7
    provided baseDependencies.threetenabp
    provided(baseDependencies.retrofitRxJava2Adapter) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
    }
    provided baseDependencies.rxJava2
    provided(baseDependencies.rxAndroid2) {
        exclude module: 'rxjava'
    }
    provided modelDependencies.multiDex

    compile(testDependencies.junit) {
        exclude module: 'hamcrest-core'
    }
    compile(testDependencies.mockito) {
        exclude module: 'hamcrest-core'
    }
    compile(testDependencies.jsonAssert) {
        exclude module: 'json'
    }
    compile testDependencies.hamcrestLibrary
    compile testDependencies.mockWebServer
    compile(testDependencies.restMockAndroid) {
        exclude module: 'junit'
        exclude module: 'rules'
        exclude module: 'runner'
        exclude module: 'mockwebserver'
    }
    compile(testDependencies.espresso) {
        exclude module: 'hamcrest-library'
        exclude module: 'rules'
        exclude module: 'runner'
        exclude module: 'javax.annotation-api'
        exclude group: 'javax.inject'
    }
    compile(testDependencies.espessoContrib) {
        exclude module: 'design'
        exclude module: 'espresso-core'
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude module: 'hamcrest-core'
    }
    compile(testDependencies.espressoIntents) {
        exclude module: 'espresso-core'
    }
    compile(testDependencies.androidJUnitRunner) {
        exclude module: 'support-annotations'
    }
    compile(testDependencies.androidJUnit4Rules) {
        exclude module: 'support-annotations'
        exclude module: 'hamcrest-core'
    }
}
